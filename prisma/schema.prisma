datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  user_id        String  @id @default(uuid())  
  phone_number   String  @unique  
  username       String? @unique  
  profile_picture String?  
  last_seen      DateTime @default(now())  
  is_online      Boolean  @default(false)  

  // Relations
  devices        Device[]  
  sentMessages   MessageQueue[] @relation("SentMessages")
  receivedMessages MessageQueue[] @relation("ReceivedMessages")
  messageMetadataSent MessageMetadata[] @relation("MetadataSent")
  messageMetadataReceived MessageMetadata[] @relation("MetadataReceived")

  created_at     DateTime @default(now())  
  updated_at     DateTime @updatedAt  
}

model Device {
  device_id    String  @id @default(uuid())  
  user_id      String  
  public_key   String  // Used for encryption
  device_name  String  
  device_type  String  // Mobile, Desktop, Tablet, etc.
  last_active  DateTime @default(now())  

  // Relations
  user User @relation(fields: [user_id], references: [user_id])

  created_at  DateTime @default(now())  
  updated_at  DateTime @updatedAt  
}

model MessageQueue {
  message_id   String @id @default(uuid())  
  sender_id    String  
  receiver_id  String  
  created_at   DateTime @default(now())  

  // Relations
  sender   User @relation("SentMessages", fields: [sender_id], references: [user_id])
  receiver User @relation("ReceivedMessages", fields: [receiver_id], references: [user_id])
}

model MessageMetadata {
  message_id  String @id @default(uuid())  
  sender_id   String  
  receiver_id String  
  status      String @default("sent")  // sent, delivered, seen
  reaction    String?  

  // Relations
  sender   User @relation("MetadataSent", fields: [sender_id], references: [user_id])
  receiver User @relation("MetadataReceived", fields: [receiver_id], references: [user_id])

  created_at DateTime @default(now())  
  updated_at DateTime @updatedAt  
}

